# -*- coding: utf-8 -*-
"""Maximum Subarray.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p2vvcf13Q6fVYp5AMiYUs1QNfPxhGuJM
"""

'''
53. Maximum Subarray

Given an integer array nums, find the 
subarray with the largest sum, and return its sum.

 
Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.

SOLVED USING KADANE'S ALGORITHM

'''

def maxSubArray(nums):
  n = len(nums)
  maximumSum, currSumSubarray = float('-inf'), 0
  for i in range(n):
    currSumSubarray += nums[i]
    maximumSum = max(maximumSum, currSumSubarray)
    currSumSubarray = max(currSumSubarray, 0)
  return maximumSum

nums = [1,4,1,6,-1,0,6]
maxSubArray(nums)